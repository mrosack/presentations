bridge.net:
- TRANSpiler, not a .net compiler - takes c# code and translates to equivalent javascript code where possible, creates boxed representations of functionality
  that's different in c# than javascript, output is c# equivalent
- Not all standard library functionality is available, but a large subset.  Things i've run into that are different:
 - reflection (some things work like attributes, memberwise clone doesn't work, complex reflection doesn't work)
 - GOTCHA: some things that don't work quite right will fail silently (memberwise clone example)
- performance
 - where code translates closer to 1=1 with javascript performance will be better
 - regexes/decimal parsing slow for example

use cases:
 - web app with lots of business logic that would be costly/brittle to duplicate on both the front and back end

case study: greatland
 - business tax filing service (1099/w2)
 - traditional .net shop, wants to use C# where possible
 - complicated business rules for form logic, prefer immediate validation and feedback on client side
 - had issues in the past duplicating code to run on the client side to perform same validations that are happening on the backend
 - show and walkthrough digram of project setup

bridge.net vs webassembly/blazor
 - NOT GOING TO GET INTO THIS
 - in 2/3 years when blazor is stable there'll probably be no reason to use bridge, but at the moment bridge is a safe choice for production apps if it hits one of your use cases

designing code:
- can't call .net libraries from your bridge code unless you have source code, and even then might not be possible / a great idea to compile .net libraries into javascript
- if there's specific functionality you need you can implement an interface differently running in .net and running in javascript, possibly using retyped for js-specific implementations

Usage Patterns:
- Bridge.net controls webapp / Retyped
  - nuget packages generated from typescript typings files (d.ts)
  - react example: works, but you can't use JSX
- webapp calls bridge.net / library
  - can still use retyped if necessary to call javascript libraries from c# code
    - interfaces